@using PM.Business.Dto
@model PM.Entity.Models.ProductPackageType

@{
	ViewData["Title"] = "Edit";
}

<h1>Edit</h1>
<h4>Alt Packaging</h4>
<h6>Original Product: @ViewData["ProductName"] (@ViewData["ProductPrice"])</h6>
<hr />
<div class="row">
	<div class="col-md-4">
		<form asp-action="Edit">
			<div asp-validation-summary="ModelOnly" class="text-danger"></div>
			<input type="hidden" asp-for="Id" />
			<div class="form-group">
				<label asp-for="AlternateProductName" class="control-label">Product (alt)</label>
				<input asp-for="AlternateProductName" class="form-control" />
				<span asp-validation-for="AlternateProductName" class="text-danger"></span>
			</div>
			<div class="form-group">
				<label asp-for="Unit" class="control-label">Units Per Case</label>
				<input id="quantityEntered" asp-for="Unit" class="form-control" />
				<span asp-validation-for="Unit" class="text-danger"></span>
			</div>
			<div class="form-group">
				<label asp-for="AlternateProductCost" class="control-label">Cost Per Case</label>
				<input id="costEntered" asp-for="AlternateProductCost" class="form-control" onkeyup="getCost()" />
				<span asp-validation-for="AlternateProductCost" class="text-danger"></span>
				<label id="costCalculated" class="small" style="color:green">Package Cost: @ViewData["PackageCost"]</label>
			</div>
			<div class="form-group">
				<label asp-for="AlternateProductPrice" class="control-label">Retail Price (alt)</label>
				<input asp-for="AlternateProductPrice" class="form-control" />
				<span asp-validation-for="AlternateProductPrice" class="text-danger"></span>
			</div>
			<div class="form-group">
				<label asp-for="AlternateSuggestedPrice" class="control-label">Suggested Retail Price (alt)</label>
				<input asp-for="AlternateSuggestedPrice" class="form-control" />
				<span asp-validation-for="AlternateSuggestedPrice" class="text-danger"></span>
			</div>
			<div class="form-group">
				<label asp-for="AlternateProductUpccode" class="control-label">UPC Code (alt)</label>
				<input asp-for="AlternateProductUpccode" class="form-control" />
				<span asp-validation-for="AlternateProductUpccode" class="text-danger"></span>
			</div>
			<div class="form-group">
				<label asp-for="SupplierData" class="control-label">Supplier ID</label>
				<input asp-for="SupplierData" class="form-control" />
				<span asp-validation-for="SupplierData" class="text-danger"></span>
			</div>
			<div class="form-group">
				<label asp-for="SupplierId" class="control-label">Supplier</label>
				<select asp-for="SupplierId" class="form-control" asp-items="ViewBag.SupplierId"></select>
				<span asp-validation-for="SupplierId" class="text-danger"></span>
			</div>
			<div class="form-group">
				<label asp-for="ProductId" class="control-label">Product</label>
				<select asp-for="ProductId" class="form-control" asp-items="ViewBag.ProductId" disabled="disabled"></select>
				<input type="hidden" asp-for="ProductId" />
				<span asp-validation-for="ProductId" class="text-danger"></span>
			</div>
			<input type="hidden" asp-for="CreatedBy" />
			<input type="hidden" asp-for="CreatedOn" />
			<input type="hidden" asp-for="UpdatedBy" />
			<input type="hidden" asp-for="UpdatedOn" />
			<div class="form-group">
				<input type="submit" value="Save" class="btn btn-primary" />
				@if (ViewData["NoteId"] == null)
				{
					<a asp-controller="Notes" asp-action="CreateNote" asp-route-id="@RequestDto.RequestId" class="btn btn-warning">Add Note</a>
				}
				else
				{
					<a asp-controller="Notes" asp-action="Index" asp-route-id="@RequestDto.RequestId" class="btn btn-warning">Notes</a>
				}

				<a asp-controller="Products" asp-action="Details" asp-route-id="@Model.ProductId" class="btn btn-success">Product</a> <br />
			</div>
		</form>
	</div>
</div>
<div>
	<a asp-action="Index" asp-route-id="@Model.ProductId">Back to Package Type List</a> <br />
	@if (@PM.Business.Dto.RequestDto.RequestId != null)
	{
		<a asp-controller="Requests" asp-action="Details" asp-route-id="@PM.Business.Dto.RequestDto.RequestId">Back to Request</a>
	}
</div>

@section Scripts {
	@{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
