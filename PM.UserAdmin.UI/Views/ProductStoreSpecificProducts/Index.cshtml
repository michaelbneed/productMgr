@using PM.Entity.Models
@model IEnumerable<PM.Entity.Models.ProductStoreSpecific>

@{
	ViewData["Title"] = "Index";
}

<h1>Store Pricing</h1>

@if (@ViewData["ProductId"] != null)
{
<a asp-controller="Products" asp-action="Details" asp-route-id="@ViewData["ProductId"]">Back to Parent Product: @ViewData["ProductName"] (@ViewData["ProductPrice"])</a> <br />
	<a asp-action="Create" asp-route-id="@ViewData["ProductId"]" title="Add store specific data"><i class="material-icons">add</i>Add Store Data</a><br />
}

<br/>
@foreach (var item in Model)
{
<div class="card border-dark mb-3" style="max-width: 100%; color: #6A0D1F">
	<div class="card-header">
		<div class="row">
			<a asp-action="Details" title="Details" asp-route-id="@item.Id" class="col-sm-2" style="color: #6A0D1F">Store: <br />@Html.DisplayFor(modelItem => item.StoreName)</a>
			<div class="col-sm-10" align="right">
				<a asp-action="Edit" title="Edit" asp-route-id="@item.Id"><i class="material-icons">update</i></a>
				<a asp-action="Details" title="Details" asp-route-id="@item.Id"><i class="material-icons">link</i></a>
				<a asp-action="Delete" title="Delete" asp-route-id="@item.Id"><i class="material-icons">remove_circle_outline</i></a>
			</div>
		</div>
	</div>
	<div class="card-body text-dark">
		<div class="row">
			<div class="col-sm-4" style="padding-bottom: 10px">
				<a asp-controller="Products" asp-action="Details" asp-route-id="@item.ProductId" class="control-label">
					<p class="card-text">Parent Product: @Html.DisplayFor(modelItem => item.Product.ProductName)</p>
				</a><br />
				<p class="card-text">Product UPC: @Html.DisplayFor(modelItem => item.Product.Upccode)</p>
			</div>
			<div class="col-sm-4" style="padding-bottom: 10px">
				<p class="card-text">Store Cost: @Html.DisplayFor(modelItem => item.StoreCost)</p>
				<p class="card-text">Store Retail Price: @Html.DisplayFor(modelItem => item.StorePrice)</p>
			</div>
		</div>
	</div>
</div>



}